<?php

/**
 * @file
 * Provides hooks.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Session\AccountInterface;

/**
 * Implements hook_entity_field_access().
 */
function commerce_wishlist_api_entity_field_access($operation, FieldDefinitionInterface $field_definition, AccountInterface $account, FieldItemListInterface $items = NULL) {
  $route = \Drupal::routeMatch()->getRouteObject();
  // Only check access if this is running on our API routes.
  if (!$route || !$route->hasRequirement('_wishlist_api')) {
    return AccessResult::neutral();
  }

  $entity_type_id = $field_definition->getTargetEntityTypeId();
  $field_name = $field_definition->getName();
  if ($operation == 'view') {
    if ($entity_type_id == 'commerce_wishlist') {
      $allowed_fields = [
        'wishlist_id',
        'uuid',
        'name',
        'wishlist_items',
      ];
    }
    elseif ($entity_type_id == 'commerce_wishlist_item') {
      $allowed_fields = [
        'wishlist_id',
        'wishlist_item_id',
        'uuid',
        'purchasable_entity',
        'title',
        'quantity',
      ];
    }
    else {
      // Disallow access to generic entity fields for any other entity which
      // has been normalized and being returns (like purchasable entities.)
      $disallowed_fields = [
        'created',
        'changed',
        'default_langcode',
        'langcode',
        'status',
        'uid',
      ];
      return AccessResult::forbiddenIf(in_array($field_name, $disallowed_fields));
    }
    return AccessResult::forbiddenIf(!in_array($field_name, $allowed_fields));
  }

  return AccessResult::neutral();
}
