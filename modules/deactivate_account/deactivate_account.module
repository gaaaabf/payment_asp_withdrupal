<?php

/**
 * @file
 * Render an disable my account form  for authenticated users.
 */
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function deactivate_account_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.deactivate_account':
      $output = '<p>' . t('This module allows a user to delete his/her account or deactivate it
      temporarily. A user can choose the time period option for which the account
      will stay deactivated. These options are configurable. The account will stay
      inactive for the selected time period.') . '</p>';

      return $output;
  }
}

/**
 * Implements hook_form_alter().
 */
function deactivate_account_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_login' || $form_id == 'user_login_block') {
    unset($form['#validate'][0]);
    array_unshift($form['#validate'], 'deactivate_account_user_login_form_validate');
    array_unshift($form['#submit'], 'deactivate_account_user_login_form_submit');
  }

  if ($form_id == 'deactivate_account_form') {
    $form['#validate']  = array('deactivate_account_form_validate');
  }
}

/**
 * Check the details supply authenticate and match the user currently logged in.
 */
function deactivate_account_form_validate(array &$form, FormStateInterface $form_state) {

  $user = \Drupal::currentUser();

  if ((\Drupal::service('user.auth')->authenticate($form_state->getValues()['username'], $form_state->getValues()['password']) == FALSE) || ($form_state->getValues()['username'] != $user->getUsername())) {
    $form_state->setErrorByName('name', t('That username and or password is not valid.'));
  }
}

/**
 * Validates the user's acount deactivation time is completed or not.
 */
function deactivate_account_user_login_form_validate(&$form, &$form_state) {

  $form_state['enable_user'] = FALSE;
  if (!empty($form_state['values']['name'])) {
    $username = $form['name']['#value'];
    $user_status = db_select('users', 'u')
      ->fields('u', array('status'))
      ->condition('name', $username)
      ->execute()
      ->fetchAssoc();

    if ($user_status['status'] != 1) {
      $user_result = db_select('deactivate_account', 'disable')
        ->fields('disable', array('uid', 'expiration'))
        ->condition('name', $username)
        ->execute()
        ->fetchAssoc();
      if (isset($user_result['expiration'])) {
        if (REQUEST_TIME > $user_result['expiration']) {
          $form_state['enable_user'] = TRUE;
          $form_state['uid'] = $user_result['uid'];
        }
        else {
          $time_diff = $user_result['expiration'] - REQUEST_TIME;
          $time_in_hours = (int) ($time_diff / 3600);
          $time_in_minutes = (int) (($time_diff % 3600) / 60);
          if ($time_in_hours > 1) {
            $time_left = $time_in_hours . ' hours ' . $time_in_minutes . ' minutes.';
          }
          elseif ($time_in_hours == 1) {
            $time_left = $time_in_hours . ' hour ' . $time_in_minutes . ' minutes.';
          }
          else {
            $time_in_secs = (int) (($time_diff % 3600) % 60);
            if ($time_in_minutes > 1) {
              $time_left = $time_in_minutes . ' minutes ' . $time_in_secs . ' seconds.';
            }
            elseif ($time_in_minutes == 1) {
              $time_left = $time_in_minutes . ' minute ' . $time_in_secs . ' seconds.';
            }
            else {
              $time_left = $time_in_secs . ' seconds.';
              if ($time_in_secs == 1) {
                $time_left = $time_in_secs . ' second.';
              }
            }
          }
          form_set_error('name', t('This account has been deactivated. Please try login after @time', array('@time' => $time_left)));
        }
      }
      else {
        if (!empty($form_state['values']['name']) && user_is_blocked($form_state['values']['name'])) {
          // Blocked in user administration.
          form_set_error('name', t('The username %name has not been activated or is blocked.', array('%name' => $form_state['values']['name'])));
        }
      }
    }
  }
}

/**
 * Activates user account other content if deactivation time is completed.
 */
function deactivate_account_user_login_form_submit($form, &$form_state) {

  if ($form_state['enable_user']) {
    $uid = $form_state['uid'];
    deactivate_account_activate_user($uid);

  }
}